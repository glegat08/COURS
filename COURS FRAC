#include <iostream>
#include <cmath>

struct Frac
{
	int num;
	int denom;

	Frac(int num_, int denom_) : num(num_), denom(denom_) {}
};

std::ostream& operator<<(std::ostream& s, const Frac& f)
{
	s << f.num << " / " << f.denom;

	return s;
}

Frac operator+(const Frac& op1, const Frac& op2)
{
	Frac tmp{ op1.num * op2.denom + op1.denom * op2.num, op1.denom * op2.denom };
	return tmp;
}

Frac operator-(const Frac& op1, const Frac& op2)
{
	Frac tmp{ op1.num * op2.denom - op1.denom * op2.num, op1.denom * op2.denom };
	return tmp;
}

Frac operator*(const Frac& op1, const Frac& op2)
{
	Frac tmp{ op1.num * op2.num, op1.denom * op2.denom };
	return tmp;
}

Frac operator/(const Frac& op1, const Frac& op2)
{
	Frac tmp{ op1.num * op2.denom, op1.denom * op2.num };
	return tmp;
}

Frac operator^(const Frac& op1, int op2)
{
	Frac tmp{ std::pow(op1.num ^ op2), std::pow(op1.denom ^ op2) };
	return tmp;
}

int main()
{
	Frac f1(1, 4);
	Frac f2(1, 3);

	std::cout << f1 << std::endl;
	std::cout << f2 << std::endl;
	std::cout << std::endl;
	std::cout << f1 + f2 << std::endl;
	std::cout << std::endl;
	std::cout << f1 - f2 << std::endl;
	std::cout << std::endl;
	std::cout << f1 * f2 << std::endl;
	std::cout << std::endl;
	std::cout << f1 / f2 << std::endl;
	std::cout << std::endl;
	std::cout << (f1 ^ 2) << std::endl;

}
